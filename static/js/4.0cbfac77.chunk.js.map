{"version":3,"sources":["components/Card.js","components/Pagination.js","components/Genre.js","pages/GenrePage.js"],"names":["Card","detail","type","useParams","history","useHistory","param","isAnime","isManga","isCharacters","redirectToPage","e","preventDefault","push","mal_id","className","href","onClick","src","images","webp","image_url","alt","episodes","rank","title","genres","SeparateArrayToLink","separator","link","page","score","Pagination","data","useState","width","window","innerWidth","dimension","setDimension","useEffect","_","debouncedHandleResize","debounce","addEventListener","removeEventListener","pagination","config","limit","Object","entries","responsive","find","key","BREAKPOINTS","navigation","id","pageId","currentIndex","parseInt","paginationTotal","Math","ceil","total","moveTrigger","offset","to","baseLink","minActive","maxActive","range","map","num","paginationLink","Genre","dispatch","useDispatch","useSelector","state","genre","loading","name","fetchGenre","console","log","length","items","mobile","Loader","GenrePage"],"mappings":"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","file":"static/js/4.0cbfac77.chunk.js","sourcesContent":["import React from 'react'\nimport { SeparateArrayToLink } from '../utils/utils'\nimport { useParams, useHistory } from \"react-router-dom\"\n\nexport default function Card({detail}) {\n    const { type } = useParams()\n    const history = useHistory()\n    const param = type ? type : 'anime'\n    const isAnime = param === 'anime'\n    const isManga = param === 'manga'\n    const isCharacters = param === 'characters'\n    const redirectToPage = (e) => {\n        e.preventDefault()\n        history.push('/page/'+param+'/' + detail.mal_id)\n    }\n\n    return (\n        <div className=\"anime anime-card\">\n            <div className=\"anime-image\">\n                <a href={'page/'+param+'/' + detail.mal_id} className=\"anime-card-link\" onClick={redirectToPage}>\n                    <img src={detail?.images?.webp.image_url || detail.image_url} alt=\"\"/>\n                    {isAnime ? <span className=\"anime-eps\">{detail.episodes ? `${detail.episodes} EPS` : '?? EPS'}</span> : ''}\n                    \n                </a>\n                {isCharacters ? (\n                    <span className=\"character-rank-tag\">#{detail.rank}</span>\n                ) : ''}\n\n                <div className={'card-title anime-title' + (isCharacters ? ' character-name' : '')}>\n                    <a className=\"anime-link\" href={'/page/'+param+'/' + detail.mal_id} onClick={redirectToPage}>{detail.title}</a>\n                </div>\n                {detail.genres ?(\n                    <div className=\"anime-genre\">{SeparateArrayToLink(detail.genres, {separator: '', link: '#/genre/', page: '/1'})}</div>\n                ) : ''}\n            </div>\n            \n            {isAnime || isManga\n                ? (\n                <div className=\"rating\">\n                    <i className=\"fa fa-star-o\" aria-hidden=\"true\"></i>\n                    <div className=\"rating-score\">{detail.score ? detail.score : 'NA'}</div>\n                </div>\n                ) : ''\n            }\n\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport { Link } from \"react-router-dom\"\nimport { range, debounce } from '../utils/utils'\nimport { BREAKPOINTS } from '../utils/constants';\nimport { config } from '../config'\n\nexport default function Pagination({data}) {\n    const [dimension, setDimension] = useState({ \n        width: window.innerWidth\n    })\n\n    useEffect(_ => {\n        const debouncedHandleResize = debounce(_ =>\n            setDimension({\n                width: window.innerWidth\n            })\n        , 200)\n\n        window.addEventListener('resize', debouncedHandleResize)\n    \n        return _ => {\n          window.removeEventListener('resize', debouncedHandleResize)\n        }\n    }, [])\n\n    const { pagination } = config\n\n    let limit = Object.entries(data.responsive || {}).find(([key]) => dimension.width <= BREAKPOINTS[key])\n    limit = (limit ? limit[1] : null) || pagination.navigation.limit || 10\n\n    const { id, pageId } = useParams()\n    const currentIndex = parseInt(pageId)\n    const paginationTotal = Math.ceil(data.total / 100)\n    const moveTrigger = Math.ceil(limit / 2)\n    const offset = currentIndex + moveTrigger\n\n    const paginationLink = () => {\n\n        let minActive = currentIndex - (limit - 2)\n        let maxActive = (currentIndex) + moveTrigger\n\n        if(currentIndex < moveTrigger){\n            minActive = 1\n            maxActive = limit;\n        }\n\n        if(currentIndex >= 5){\n            minActive = (currentIndex + 1) - moveTrigger\n            maxActive = currentIndex + moveTrigger;\n        }\n\n        if(offset >= paginationTotal){\n            minActive = (paginationTotal + 1) - limit\n            maxActive = paginationTotal;\n        }\n\n        if(limit > paginationTotal){\n            minActive = 1\n            maxActive = paginationTotal\n        }\n\n        return range(minActive, maxActive).map((num) => \n            <Link key={num} to={(data.baseLink + '/' + id || '') + '/' + num} className={'anime-pagination-link' + (currentIndex === num ? ' current': '')}>{num}</Link>\n        )\n    }\n    \n    return (\n        <div className='anime-pagination'>\n\n            {paginationTotal ? (\n                <>\n                    {currentIndex !== 1 ? (\n                        <>\n                            <Link to={data.baseLink + '/' + id + '/1'} className=\"anime-pagination-link prev controls\">&lt;&lt;</Link>\n                            <Link className='anime-pagination-link prev controls' to={data.baseLink + '/' + id + '/' + (currentIndex - 1)}>&lt;</Link>\n                        </>\n                    ) : ''}\n\n                    {paginationLink()}\n\n                    {currentIndex < paginationTotal ? (\n                        <>\n                            <Link className='anime-pagination-link next controls' to={data.baseLink + '/' + id + '/' + (currentIndex + 1)}>&gt;</Link>\n                            <Link to={data.baseLink + '/' + id + '/' + paginationTotal} className=\"anime-pagination-link prev controls\">&gt;&gt;</Link>\n                        </>\n                    ) : ''}\n        \n                </>\n            ) : ''}\n            \n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Card from './Card'\nimport Pagination from './Pagination'\nimport Loader from './Loader'\nimport { fetchGenre } from '../actions/genre'\nimport { title } from '../utils/utils'\n\nexport default function Genre() {\n    const dispatch = useDispatch()\n    const state = useSelector(state => state)\n    const { genre, loading } = state.genre\n    const { name, id, pageId }  = useParams()\n    const history = useHistory()\n\n    useEffect(() => {\n        dispatch(fetchGenre(name, id, pageId, history))   \n    }, [dispatch, name, id, pageId, history])\n\n    return (\n        <>\n            {console.log(genre)}\n            <div className=\"head flex anime-pagination-head\">\n                <h2 className=\"text-capitalize\">Genre: {title(name)}</h2>\n\n                <div className=\"anime-card-pagination\">\n                    {genre?.data.length ? (\n                        <Pagination data={{\n                            total: genre.pagination.items.total,\n                            items: genre.data,\n                            baseLink: `/genre/${name}`,\n                            name: name,\n                            responsive: {\n                                mobile: 3\n                            }\n                        }}/>\n                    ) : ''}\n                </div>\n            </div>\n            \n            <div className=\"anime-pagination-body\">\n                {loading ? (\n                    <Loader/>\n                ) : ''}\n                <div className=\"anime-cards\">\n                    {genre?.data.length ? genre.data.map(genre => \n                        <Card key={genre.mal_id} detail={genre} />\n                    ) : ''}\n                </div>\n            </div>\n\n            <div className=\"anime-card-pagination\">\n                {genre?.data.length ? (\n                    <Pagination data={{\n                        total: genre.pagination.items.total,\n                        items: genre.data,\n                        baseLink: `/genre/${name}`,\n                        responsive: {\n                            mobile: 3\n                        }\n                    }}/>\n                ) : ''}\n            </div>\n        </>\n        \n \n    )\n}\n","import React from 'react'\nimport Genre from '../components/Genre'\n\nexport default function GenrePage() {\n\n    return (\n        <div id=\"content\">       \n            <div className=\"box\">\n                <Genre/>\n            </div>\n        </div>\n    )\n}\n"],"sourceRoot":""}