{"version":3,"sources":["components/Card.js","utils/date.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Latest.js","pages/LatestPage.js"],"names":["Card","detail","type","useParams","history","useHistory","param","isAnime","isManga","isCharacters","redirectToPage","e","preventDefault","push","mal_id","className","href","onClick","src","images","webp","image_url","alt","episodes","rank","title","genres","SeparateArrayToLink","separator","link","page","score","day","DAYS_OF_THE_WEEK","Date","getDay","formatDate","date","toLocaleDateString","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Scheduled","dispatch","useDispatch","scheduled","useSelector","state","season","latest","data","useEffect","fetchScheduled","fetchSeason","length","map","anime","LatestPage","id"],"mappings":"8HAAA,iEAIe,SAASA,EAAT,GAAyB,IAAD,EAATC,EAAS,EAATA,OAClBC,EAASC,cAATD,KACFE,EAAUC,cACVC,EAAQJ,GAAc,QACtBK,EAAoB,UAAVD,EACVE,EAAoB,UAAVF,EACVG,EAAyB,eAAVH,EACfI,EAAiB,SAACC,GACpBA,EAAEC,iBACFR,EAAQS,KAAK,SAASP,EAAM,IAAML,EAAOa,SAG7C,OACI,sBAAKC,UAAU,mBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,oBAAGC,KAAM,QAAQV,EAAM,IAAML,EAAOa,OAAQC,UAAU,kBAAkBE,QAASP,EAAjF,UACI,qBAAKQ,KAAW,OAANjB,QAAM,IAANA,GAAA,UAAAA,EAAQkB,cAAR,eAAgBC,KAAKC,YAAapB,EAAOoB,UAAWC,IAAI,KACjEf,EAAU,sBAAMQ,UAAU,YAAhB,SAA6Bd,EAAOsB,SAAP,UAAqBtB,EAAOsB,SAA5B,QAA6C,WAAmB,MAG3Gd,EACG,uBAAMM,UAAU,qBAAhB,cAAuCd,EAAOuB,QAC9C,GAEJ,qBAAKT,UAAW,0BAA4BN,EAAe,kBAAoB,IAA/E,SACI,mBAAGM,UAAU,aAAaC,KAAM,SAASV,EAAM,IAAML,EAAOa,OAAQG,QAASP,EAA7E,SAA8FT,EAAOwB,UAExGxB,EAAOyB,OACJ,qBAAKX,UAAU,cAAf,SAA8BY,YAAoB1B,EAAOyB,OAAQ,CAACE,UAAW,GAAIC,KAAM,WAAYC,KAAM,SACzG,MAGPvB,GAAWC,EAER,sBAAKO,UAAU,SAAf,UACI,mBAAGA,UAAU,eAAe,cAAY,SACxC,qBAAKA,UAAU,eAAf,SAA+Bd,EAAO8B,MAAQ9B,EAAO8B,MAAQ,UAE7D,Q,iCC1CpB,gFAEaC,EAAM,kBAAMC,KAAiB,IAAIC,MAAOC,WAYxCC,EAAa,SAAAC,GAAI,OAAI,IAAIH,KAAKG,GAAMC,mBAAmB,W,+GCVrD,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,qDIE/E,SAASC,IACpB,IAAMC,EAAWC,cACTC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aAAzCA,UACAG,EAAWF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAtCA,OACFC,GAAkB,OAATJ,QAAS,IAATA,OAAA,EAAAA,EAAWK,QAAX,OAAmBF,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAQE,MAA3B,YAAsCL,EAAUK,MAAhD,EAAyDF,EAAOE,OAAQ,GAOvF,OALAC,qBAAU,WACNR,EAASS,YAAe7B,gBACxBoB,EAASU,iBACV,CAACV,IAGA,mCACKM,EAAOK,OAASL,EAAOM,KAAI,SAAAC,GAAK,OAAI,cAACjE,EAAA,EAAD,CAAyBC,OAAQgE,GAAtBA,EAAMnD,WAA6B,KCjBhF,SAASoD,IACpB,OACI,qBAAKC,GAAG,UAAR,SACI,sBAAKpD,UAAU,MAAf,UACI,qBAAKA,UAAU,OAAf,SACI,0CAEJ,qBAAKA,UAAU,cAAf,SACI,cAAC,EAAD","file":"static/js/3.e4db59ae.chunk.js","sourcesContent":["import React from 'react'\nimport { SeparateArrayToLink } from '../utils/utils'\nimport { useParams, useHistory } from \"react-router-dom\"\n\nexport default function Card({detail}) {\n    const { type } = useParams()\n    const history = useHistory()\n    const param = type ? type : 'anime'\n    const isAnime = param === 'anime'\n    const isManga = param === 'manga'\n    const isCharacters = param === 'characters'\n    const redirectToPage = (e) => {\n        e.preventDefault()\n        history.push('/page/'+param+'/' + detail.mal_id)\n    }\n\n    return (\n        <div className=\"anime anime-card\">\n            <div className=\"anime-image\">\n                <a href={'page/'+param+'/' + detail.mal_id} className=\"anime-card-link\" onClick={redirectToPage}>\n                    <img src={detail?.images?.webp.image_url || detail.image_url} alt=\"\"/>\n                    {isAnime ? <span className=\"anime-eps\">{detail.episodes ? `${detail.episodes} EPS` : '?? EPS'}</span> : ''}\n                    \n                </a>\n                {isCharacters ? (\n                    <span className=\"character-rank-tag\">#{detail.rank}</span>\n                ) : ''}\n\n                <div className={'card-title anime-title' + (isCharacters ? ' character-name' : '')}>\n                    <a className=\"anime-link\" href={'/page/'+param+'/' + detail.mal_id} onClick={redirectToPage}>{detail.title}</a>\n                </div>\n                {detail.genres ?(\n                    <div className=\"anime-genre\">{SeparateArrayToLink(detail.genres, {separator: '', link: '#/genre/', page: '/1'})}</div>\n                ) : ''}\n            </div>\n            \n            {isAnime || isManga\n                ? (\n                <div className=\"rating\">\n                    <i className=\"fa fa-star-o\" aria-hidden=\"true\"></i>\n                    <div className=\"rating-score\">{detail.score ? detail.score : 'NA'}</div>\n                </div>\n                ) : ''\n            }\n\n        </div>\n    )\n}\n","import { DAYS_OF_THE_WEEK } from '../utils/constants'\n\nexport const day = () => DAYS_OF_THE_WEEK[new Date().getDay()]\n\nexport const prevDay = (number) => {\n    let date = new Date()\n    \n    date.setDate(date.getDate() - (number || 1))\n    \n    return DAYS_OF_THE_WEEK[date.getDay()]\n}\n\nexport const isValidDay = day => DAYS_OF_THE_WEEK.includes(day)\n\nexport const formatDate = date => new Date(date).toLocaleDateString(\"en-US\")","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchScheduled } from '../actions/scheduled'\nimport { fetchSeason } from '../actions/season'\nimport Card from './Card'\nimport { day } from '../utils/date'\n\nexport default function Scheduled() {\n    const dispatch = useDispatch()\n    const { scheduled } = useSelector(state => state.scheduled)\n    const { season } = useSelector(state => state.season)\n    const latest = scheduled?.data && season?.data ? [...scheduled.data, ...season.data] : []\n\n    useEffect(() =>{\n        dispatch(fetchScheduled(day()))\n        dispatch(fetchSeason())\n    }, [dispatch])\n\n    return (\n        <>\n            {latest.length ? latest.map(anime => <Card key={anime.mal_id} detail={anime} />) : ''}\n        </>\n    )\n}\n","import React from 'react'\nimport Latest from '../components/Latest'\n\nexport default function LatestPage() {\n    return (\n        <div id=\"content\">     \n            <div className=\"box\">\n                <div className=\"head\">\n                    <h2>Latest</h2>\n                </div>\n                <div className=\"anime-cards\">\n                    <Latest/>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"sourceRoot":""}