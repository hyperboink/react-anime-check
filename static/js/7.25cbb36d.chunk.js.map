{"version":3,"sources":["utils/date.js","pages/DetailsPage.js"],"names":["day","DAYS_OF_THE_WEEK","Date","getDay","formatDate","date","toLocaleDateString","DetailsPage","dispatch","useDispatch","useSelector","state","details","loading","useParams","id","type","pageType","anime","data","useEffect","fetchDetails","className","src","images","webp","image_url","alt","title_english","status","aired","from","to","episodes","SeparateArrayToLink","genres","separator","link","page","producers","studios","licensors","length","ifEmpty","duration","rating","score","rank","title","name","synopsis","about","trailer","width","height","embed_url","frameBorder","allow","allowFullScreen","relations","Object","entries","map","key","related","relation","transformRelations","entry","subType"],"mappings":"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","file":"static/js/7.25cbb36d.chunk.js","sourcesContent":["import { DAYS_OF_THE_WEEK } from '../utils/constants'\n\nexport const day = () => DAYS_OF_THE_WEEK[new Date().getDay()]\n\nexport const prevDay = (number) => {\n    let date = new Date()\n    \n    date.setDate(date.getDate() - (number || 1))\n    \n    return DAYS_OF_THE_WEEK[date.getDay()]\n}\n\nexport const isValidDay = day => DAYS_OF_THE_WEEK.includes(day)\n\nexport const formatDate = date => new Date(date).toLocaleDateString(\"en-US\")","import React, {useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams } from \"react-router-dom\"\nimport { formatDate } from '../utils/date';\nimport { SeparateArrayToLink, ifEmpty, transformRelations} from '../utils/utils';\nimport { fetchDetails } from '../actions/details';\nimport Loader from '../components/Loader';\n\nexport default function DetailsPage() {\n    const dispatch = useDispatch()\n    const { details, loading } = useSelector(state => state.details)\n    const { id, type } = useParams();\n    const pageType = type === 'characters' ? 'character' : type;\n    const anime = details?.data\n\n    useEffect(() =>{\n        dispatch(fetchDetails(pageType, id , type !== 'characters' ? '/full' : ''))\n    }, [dispatch, pageType, type, id])\n\n    return (\n        <div className=\"single-page flex\">\n            {loading ? (\n                <Loader/>\n            ) : (\n                <>\n                    <div className=\"single-page-side\">\n                        <div className=\"featured-img\">\n                            <img src={anime?.images.webp.image_url} alt=\"\"/>\n                        </div>\n\n                        {pageType !== 'character' ? (\n                            <div className=\"single-page-side-info\">\n                                <ul>\n                                    <li>English Title: {anime?.title_english}</li>\n                                    <li>Status: {anime?.status}</li>\n                                    <li>Aired: {anime?.aired ? formatDate(anime?.aired.from) : '??'} - {anime?.aired && anime?.aired.to ? formatDate(anime?.aired.to) : '??'}</li>\n                                    <li>Type: {anime?.type}</li>\n                                    <li>Episodes: {anime?.episodes || '??'}</li>\n                                    <li>Genre: {SeparateArrayToLink(anime?.genres, {separator: ' / ', link: '#/genre/anime/', page: '/1'})}</li>\n                                    <li>Producers: {SeparateArrayToLink(anime?.producers, {separator: ', '})}</li>\n                                    <li>Studios: {SeparateArrayToLink(anime?.studios, {separator: ', '})}</li>\n                                    <li>Licensors: {anime?.licensors && anime?.licensors.length ? SeparateArrayToLink(anime?.licensors, {separator: ', '}): 'NA'}</li>\n                                    <li>Duration: {ifEmpty(anime?.duration, 'NA')}</li>\n                                    <li>Rating: {anime?.rating}</li>\n                                    <li>Score: {ifEmpty(anime?.score, 'NA')}</li>\n                                    <li>Rank: {ifEmpty(anime?.rank, 'NA')}</li>\n                                </ul>\n                            </div>\n                        ) : ''}\n                    </div>\n\n                    <div className=\"single-page-content\">\n                        <h1 className=\"single-page-title page-title\">{anime?.title || anime?.name}</h1>\n                        <p>{anime?.synopsis || anime?.about || 'No info yet.'}</p>\n\n                        {anime?.trailer && (type === 'anime')? (\n                            <div className=\"trailer\">\n                                <h3>Trailer</h3>\n                                <iframe width=\"100%\" height=\"400\" src={anime.trailer.embed_url} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                            </div>\n                        ) : ''}\n\n                        {pageType !== 'character' ? (\n                            <>\n                                <h3 className=\"related-title\">Other Information</h3>\n\n                                <div className=\"related-info\">\n                                    {anime?.relations.length ? Object.entries(anime.relations).map(([key, related]) => \n                                        (\n                                            <div key={key} className=\"related-info-con\">\n                                                <strong>{related.relation}: </strong>\n                                                {transformRelations(related.entry, {\n                                                    separator: ', ',\n                                                    link: '#/page/',\n                                                    subType: true\n                                                })}\n                                            </div>\n                                        )\n                                    ) : ''}\n                            </div>\n                            </>\n                        ) : ''}\n                    </div>\n                </>\n            )}\n        </div>\n    )\n}\n"],"sourceRoot":""}